<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cug.lab.dao.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.cug.lab.model.SysRole">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="resource_ids" property="resourceIds" jdbcType="VARCHAR"/>
        <result column="available" property="available" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, role, description, resource_ids, available
  </sql>

    <insert id="createRole" parameterType="com.cug.lab.model.SysRole">
    insert into sys_role ( role, description, resource_ids, available)
    values (#{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{resourceIds,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>

    <update id="updateRole" parameterType="com.cug.lab.model.SysRole">
        update sys_role
        <set>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null">
                resource_ids = #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteRole" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <select id="findOne" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findListByName" resultMap="BaseResultMap" parameterType="java.util.Set">
        select <include refid="Base_Column_List"/>
        from sys_role
        where role in
        <foreach collection="roles"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findAll" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_role
    </select>

</mapper>